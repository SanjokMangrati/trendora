
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart?
  orders    Order[]
  userId    Int? 
  user      User?   @relation(fields: [userId], references: [id])
}
model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  image       String
  price       Float
  stock       Int
  cartItems   CartItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Cart {
  id        Int        @id @default(autoincrement())
  sessionId String     @unique
  session   Session    @relation(fields: [sessionId], references: [id])
  items     CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
}

model Order {
  id             Int           @id @default(autoincrement())
  sessionId      String
  session        Session       @relation(fields: [sessionId], references: [id])
  totalPurchaseAmount Float
  totalItemsPurchased Int
  discountAmountApplied Float
  discountCode   DiscountCode? @relation(fields: [discountCodeId], references: [id])
  discountCodeId Int?
  userId         Int
  createdAt      DateTime      @default(now())
}

model DiscountCode {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  discount  Float
  used      Boolean  @default(false)
  orders    Order[]
  userId    Int
  createdAt DateTime @default(now())
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Session Session[]
}
